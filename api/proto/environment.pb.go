// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/environment.proto

package lsfn

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JoinServer struct {
	// No authentication yet, just say the ID of the ship you're joining as.
	ShipId               string   `protobuf:"bytes,1,opt,name=shipId,proto3" json:"shipId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinServer) Reset()         { *m = JoinServer{} }
func (m *JoinServer) String() string { return proto.CompactTextString(m) }
func (*JoinServer) ProtoMessage()    {}
func (*JoinServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5453b116d733dfde, []int{0}
}

func (m *JoinServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinServer.Unmarshal(m, b)
}
func (m *JoinServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinServer.Marshal(b, m, deterministic)
}
func (m *JoinServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinServer.Merge(m, src)
}
func (m *JoinServer) XXX_Size() int {
	return xxx_messageInfo_JoinServer.Size(m)
}
func (m *JoinServer) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinServer.DiscardUnknown(m)
}

var xxx_messageInfo_JoinServer proto.InternalMessageInfo

func (m *JoinServer) GetShipId() string {
	if m != nil {
		return m.ShipId
	}
	return ""
}

type Welcome struct {
	// You get back a description of your ship.
	Ship                 *ShipDescription `protobuf:"bytes,1,opt,name=ship,proto3" json:"ship,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Welcome) Reset()         { *m = Welcome{} }
func (m *Welcome) String() string { return proto.CompactTextString(m) }
func (*Welcome) ProtoMessage()    {}
func (*Welcome) Descriptor() ([]byte, []int) {
	return fileDescriptor_5453b116d733dfde, []int{1}
}

func (m *Welcome) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Welcome.Unmarshal(m, b)
}
func (m *Welcome) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Welcome.Marshal(b, m, deterministic)
}
func (m *Welcome) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Welcome.Merge(m, src)
}
func (m *Welcome) XXX_Size() int {
	return xxx_messageInfo_Welcome.Size(m)
}
func (m *Welcome) XXX_DiscardUnknown() {
	xxx_messageInfo_Welcome.DiscardUnknown(m)
}

var xxx_messageInfo_Welcome proto.InternalMessageInfo

func (m *Welcome) GetShip() *ShipDescription {
	if m != nil {
		return m.Ship
	}
	return nil
}

func init() {
	proto.RegisterType((*JoinServer)(nil), "lsfn.JoinServer")
	proto.RegisterType((*Welcome)(nil), "lsfn.Welcome")
}

func init() { proto.RegisterFile("api/proto/environment.proto", fileDescriptor_5453b116d733dfde) }

var fileDescriptor_5453b116d733dfde = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x27, 0x30, 0x4e, 0xf1, 0x8a, 0x50, 0x83, 0x8a, 0xd4, 0x8d, 0x04, 0x17, 0x75, 0xd3,
	0x4a, 0xed, 0x1b, 0xe8, 0x46, 0x71, 0xd5, 0x22, 0xae, 0xfb, 0x73, 0xa5, 0x81, 0x26, 0x37, 0xa4,
	0xa1, 0xe0, 0xdb, 0x0f, 0x49, 0x0b, 0x59, 0xe6, 0x3b, 0x5f, 0xce, 0xe1, 0xc2, 0x63, 0x67, 0x64,
	0x69, 0x2c, 0x39, 0x2a, 0x51, 0xaf, 0xd2, 0x92, 0x56, 0xa8, 0x5d, 0x11, 0x08, 0x3f, 0xce, 0xcb,
	0x9f, 0xce, 0x6e, 0xa3, 0xb2, 0x4c, 0xd2, 0x6c, 0x99, 0x78, 0x06, 0xf8, 0x22, 0xa9, 0x5b, 0xb4,
	0x2b, 0x5a, 0x7e, 0x0f, 0x27, 0x9f, 0x7d, 0x8e, 0x0f, 0xec, 0x89, 0xe5, 0x97, 0xcd, 0xfe, 0x12,
	0x35, 0x24, 0xbf, 0x38, 0x0f, 0xa4, 0x90, 0xbf, 0xc0, 0xd1, 0xc3, 0x20, 0x5c, 0x55, 0x77, 0x85,
	0xef, 0x2e, 0xda, 0x49, 0x9a, 0x0f, 0x5c, 0x06, 0x2b, 0x8d, 0x93, 0xa4, 0x9b, 0xa0, 0x54, 0x13,
	0x5c, 0x7c, 0x53, 0xdf, 0xff, 0xfb, 0x3f, 0x7e, 0x84, 0xa7, 0x9b, 0x1d, 0x07, 0xb3, 0xeb, 0x8d,
	0xec, 0xe5, 0xe2, 0xc0, 0x6b, 0x48, 0xde, 0x49, 0xa9, 0x4e, 0x8f, 0xfc, 0x26, 0x76, 0xef, 0x28,
	0x4b, 0x23, 0xfa, 0x31, 0x63, 0xe7, 0x50, 0x1c, 0x72, 0xf6, 0xca, 0xfa, 0x53, 0x38, 0xe6, 0xed,
	0x1c, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xbf, 0xe5, 0x87, 0x07, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LobbyClient is the client API for Lobby service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LobbyClient interface {
	Join(ctx context.Context, in *JoinServer, opts ...grpc.CallOption) (*Welcome, error)
	Command(ctx context.Context, opts ...grpc.CallOption) (Lobby_CommandClient, error)
}

type lobbyClient struct {
	cc *grpc.ClientConn
}

func NewLobbyClient(cc *grpc.ClientConn) LobbyClient {
	return &lobbyClient{cc}
}

func (c *lobbyClient) Join(ctx context.Context, in *JoinServer, opts ...grpc.CallOption) (*Welcome, error) {
	out := new(Welcome)
	err := c.cc.Invoke(ctx, "/lsfn.Lobby/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Command(ctx context.Context, opts ...grpc.CallOption) (Lobby_CommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Lobby_serviceDesc.Streams[0], "/lsfn.Lobby/Command", opts...)
	if err != nil {
		return nil, err
	}
	x := &lobbyCommandClient{stream}
	return x, nil
}

type Lobby_CommandClient interface {
	Send(*ShipCommand) error
	Recv() (*ShipUpdate, error)
	grpc.ClientStream
}

type lobbyCommandClient struct {
	grpc.ClientStream
}

func (x *lobbyCommandClient) Send(m *ShipCommand) error {
	return x.ClientStream.SendMsg(m)
}

func (x *lobbyCommandClient) Recv() (*ShipUpdate, error) {
	m := new(ShipUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LobbyServer is the server API for Lobby service.
type LobbyServer interface {
	Join(context.Context, *JoinServer) (*Welcome, error)
	Command(Lobby_CommandServer) error
}

func RegisterLobbyServer(s *grpc.Server, srv LobbyServer) {
	s.RegisterService(&_Lobby_serviceDesc, srv)
}

func _Lobby_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lsfn.Lobby/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Join(ctx, req.(*JoinServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Command_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LobbyServer).Command(&lobbyCommandServer{stream})
}

type Lobby_CommandServer interface {
	Send(*ShipUpdate) error
	Recv() (*ShipCommand, error)
	grpc.ServerStream
}

type lobbyCommandServer struct {
	grpc.ServerStream
}

func (x *lobbyCommandServer) Send(m *ShipUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func (x *lobbyCommandServer) Recv() (*ShipCommand, error) {
	m := new(ShipCommand)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Lobby_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lsfn.Lobby",
	HandlerType: (*LobbyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Lobby_Join_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Command",
			Handler:       _Lobby_Command_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/proto/environment.proto",
}
